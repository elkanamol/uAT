Start testing: Sep 16 10:21 UTC
----------------------------------------------------------
1/2 Testing: ParserTests
1/2 Test: ParserTests
Command: "/home/runner/work/uAT/uAT/tests/build/test_parser"
Directory: /home/runner/work/uAT/uAT/tests/build
"ParserTests" start time: Sep 16 10:21 UTC
Output:
----------------------------------------------------------
=== uAT Parser Tests ===

=== Starting Test Suite: uAT_HasPrefix ===
PASS: Should detect OK prefix
PASS: Should detect ERROR prefix
PASS: Should detect +CREG prefix
PASS: Should not detect +CREG prefix in AT command
PASS: Should handle null response
PASS: Should handle null prefix
PASS: Should handle both null
PASS: Should handle empty strings
PASS: Should handle short response
=== Finished Test Suite: uAT_HasPrefix ===
Results: 9 passed, 0 failed, 9 total


=== Starting Test Suite: uAT_IsError ===
PASS: Should detect ERROR response
PASS: Should not detect error in OK response
PASS: Should not detect error in CME error (different pattern)
PASS: Should handle null response
PASS: Should handle empty string
PASS: Should not match partial error
=== Finished Test Suite: uAT_IsError ===
Results: 15 passed, 0 failed, 15 total


=== Starting Test Suite: uAT_IsOK ===
PASS: Should detect OK response
PASS: Should not detect OK in ERROR response
PASS: Should match extended OK (prefix matching)
PASS: Should handle null response
PASS: Should handle empty string
PASS: Should not match partial OK
=== Finished Test Suite: uAT_IsOK ===
Results: 21 passed, 0 failed, 21 total


=== Starting Test Suite: uAT_IsCMEError ===
PASS: Should detect CME error
PASS: Should extract correct error code
PASS: Should detect CME error without CRLF
PASS: Should extract larger error code
PASS: Should find CME error in response
PASS: Should extract error from multi-line response
PASS: Should not detect CME error in OK
PASS: Should not detect CME error in ERROR
PASS: Should not detect CME in CMS error
PASS: Should handle null response
PASS: Should handle null error code pointer
PASS: Should handle missing error code
PASS: Should handle invalid error code
=== Finished Test Suite: uAT_IsCMEError ===
Results: 34 passed, 0 failed, 34 total


=== Starting Test Suite: uAT_IsCMSError ===
PASS: Should detect CMS error
PASS: Should extract correct error code
PASS: Should not detect CMS in CME error
PASS: Should handle null response
PASS: Should handle null error code pointer
=== Finished Test Suite: uAT_IsCMSError ===
Results: 39 passed, 0 failed, 39 total


=== Starting Test Suite: uAT_CountDelimiters ===
PASS: Should count commas
PASS: Should return 0 for no delimiters
PASS: Should count colons
PASS: Should count spaces
PASS: Should handle null string
PASS: Should handle empty string
PASS: Should handle only delimiters
=== Finished Test Suite: uAT_CountDelimiters ===
Results: 46 passed, 0 failed, 46 total


=== Starting Test Suite: uAT_ParseInt ===
PASS: Should parse first integer
PASS: Should extract correct value
PASS: Should parse negative integer
PASS: Should extract negative value
PASS: Should parse positive integer with sign
PASS: Should extract positive value
PASS: Should handle null response
PASS: Should handle null prefix
PASS: Should handle null value pointer
PASS: Should handle missing prefix
PASS: Should handle invalid format
PASS: Should detect overflow
=== Finished Test Suite: uAT_ParseInt ===
Results: 58 passed, 0 failed, 58 total


=== Starting Test Suite: uAT_ParseIntArray ===
PASS: Should parse multiple integers
PASS: Should extract correct count
PASS: Should extract first value
PASS: Should extract second value
PASS: Should extract third value
PASS: Should parse negative integers
PASS: Should extract correct count for negative values
PASS: Should extract negative value
PASS: Should parse single integer
PASS: Should extract single value count
PASS: Should extract single value
PASS: Should handle limited array size
PASS: Should extract up to array limit
PASS: Should handle null response
PASS: Should parse valid integers before invalid one
PASS: Should extract one valid integer before invalid format
PASS: Should extract the valid integer
=== Finished Test Suite: uAT_ParseIntArray ===
Results: 75 passed, 0 failed, 75 total


=== Starting Test Suite: uAT_ParseFloat ===
PASS: Should parse positive float
PASS: Should extract correct float value
PASS: Should parse negative float
PASS: Should extract correct negative float
PASS: Should parse zero float
PASS: Should extract zero value
PASS: Should handle null response
PASS: Should handle invalid format
=== Finished Test Suite: uAT_ParseFloat ===
Results: 83 passed, 0 failed, 83 total


=== Starting Test Suite: uAT_ParseHex ===
PASS: Should parse hex value
PASS: Should extract correct hex value
PASS: Should parse hex with 0x prefix
PASS: Should extract correct hex value with prefix
PASS: Should parse lowercase hex
PASS: Should extract lowercase hex value
PASS: Should handle invalid hex characters
PASS: Should handle null response
=== Finished Test Suite: uAT_ParseHex ===
Results: 91 passed, 0 failed, 91 total


=== Starting Test Suite: uAT_ParseString ===
PASS: Should parse string
PASS: Should extract correct string
PASS: Should parse string with CRLF
PASS: Should extract string without CRLF
PASS: Should handle empty string after prefix
PASS: Should handle valid string
PASS: Should extract valid string
PASS: Should handle null response
PASS: Should handle missing prefix
PASS: Should handle buffer too small
=== Finished Test Suite: uAT_ParseString ===
Results: 101 passed, 0 failed, 101 total


=== Starting Test Suite: uAT_ParseQuotedString ===
PASS: Should parse quoted string
PASS: Should extract string without quotes
PASS: Should parse quoted string with spaces
PASS: Should extract string with spaces
PASS: Should handle missing quotes
PASS: Should handle unclosed quote
=== Finished Test Suite: uAT_ParseQuotedString ===
Results: 107 passed, 0 failed, 107 total


=== Starting Test Suite: uAT_ParseEscapedString ===
PASS: Should parse escaped string
PASS: Should handle newline escape
PASS: Should parse escaped backslashes
PASS: Should handle backslash escapes
PASS: Should parse escaped quotes
PASS: Should handle quote escapes
PASS: Should handle missing quotes
PASS: Should handle null response
=== Finished Test Suite: uAT_ParseEscapedString ===
Results: 115 passed, 0 failed, 115 total


=== Starting Test Suite: uAT_ParseIPAddress ===
PASS: Should parse IP address
PASS: Should extract correct IP
PASS: Should parse IP with CRLF
PASS: Should extract IP without CRLF
PASS: Should handle null response
=== Finished Test Suite: uAT_ParseIPAddress ===
Results: 120 passed, 0 failed, 120 total


=== Starting Test Suite: uAT_ParseBinaryData ===
PASS: Should parse binary data with length
PASS: Should extract correct data size
PASS: Should extract correct binary data
PASS: Should parse binary data without length
PASS: Should extract available data size
PASS: Should handle null response
PASS: Should handle buffer too small
PASS: Should copy what fits in buffer
=== Finished Test Suite: uAT_ParseBinaryData ===
Results: 128 passed, 0 failed, 128 total


========== TEST SUMMARY ==========
Total tests: 128
Passed: 128
Failed: 0
Success rate: 100.0%
==================================
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ParserTests" end time: Sep 16 10:21 UTC
"ParserTests" time elapsed: 00:00:00
----------------------------------------------------------

Unable to find executable: /home/runner/work/uAT/uAT/tests/build/test_freertos
2/2 Testing: FreeRTOSTests
2/2 Test: FreeRTOSTests
Command: ""
Directory: /home/runner/work/uAT/uAT/tests/build
"FreeRTOSTests" start time: 
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"FreeRTOSTests" end time: Sep 16 10:21 UTC
"FreeRTOSTests" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Sep 16 10:21 UTC
